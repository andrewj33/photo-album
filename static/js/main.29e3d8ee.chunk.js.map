{"version":3,"sources":["components/nav/Navigation.js","components/album/Gallery.js","App.js","index.js"],"names":["Navigation","albumNum","handleChange","className","type","onClick","disabled","onChange","e","Number","target","value","Array","fill","map","_","i","key","class","Gallery","albumList","image","id","title","App","useState","number","list","albums","setAlbums","JSON_PLACEHOLDER_END_POINT","useEffect","a","axios","get","res","mapped","data","item","length","newNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SA2BeA,EAlBI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aAC5B,OACI,yBAAKC,UAAU,cACX,4BAAQC,KAAK,SAASD,UAAU,kBAAkBE,QAAS,kBAAMH,EAAaD,EAAW,IAAIK,SAAuB,IAAbL,GAAvG,WACA,6BACA,4BAAQM,SAAU,SAAAC,GAAC,OAAIN,EAAaO,OAAOD,EAAEE,OAAOC,SAASA,MAAOV,GAEhEW,MAAM,KAAKC,KAAK,GAAGC,KAAI,SAACC,EAAEC,GACtB,OAAO,4BAAQL,MAAOK,EAAE,EAAGC,IAAKD,EAAE,GAA3B,SAAsCA,EAAE,QAKvD,4BAAQZ,KAAK,SAASc,MAAM,kBAAkBb,QAAS,kBAAMH,EAAaD,EAAW,IAAIK,SAAuB,MAAbL,GAAmB,aCEnHkB,EAhBC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,OACE,oCACE,4BACGA,EAAUN,KAAI,SAACO,GACd,OACE,wBAAIJ,IAAKI,EAAMC,IAAf,IACID,EAAMC,GADV,KACgBD,EAAME,a,MC+CnBC,MAvDf,WACE,MAA4BC,mBAAS,CAACC,OAAQ,EAAGC,KAAM,KAAvD,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAA0B,8DAA0DF,EAAOF,QA+BjG,OAvBAK,qBAAU,YAGR,uCAAC,8BAAAC,EAAA,sEACmBC,IAAMC,IAAIJ,GAD7B,OACOK,EADP,OAEOC,EAASD,EAAIE,KAAKvB,KAAI,SAAAwB,GAC1B,MAAO,CAAChB,GAAIgB,EAAKhB,GAAIC,MAAOe,EAAKf,UAGnCM,EAAU,2BAAID,GAAL,IAAaD,KAAMS,KAN7B,2CAAD,yDAWC,CAACR,EAAOF,SAUT,yBAAKvB,UAAU,OAEVyB,EAAOD,KAAKY,OAAS,EAElB,6BACE,gCACE,qCAAWX,EAAOF,QAClB,kBAAC,EAAD,CACEzB,SAAU2B,EAAOF,OACjBxB,aArCK,SAACsC,GACpBX,EAAU,2BAAID,GAAL,IAAaF,OAAQc,SAuCpB,kBAAC,EAAD,CAASpB,UAAWQ,EAAOD,QAG9B,yCCnDXc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.29e3d8ee.chunk.js","sourcesContent":["import React from \"react\"\n\n/**\n * Navigation renders a prev and next button which simply increment\n * or decrement the album number by one. The select element iterates\n * over an 'empty' 100 count array for the options, and sets the album\n * number to the selected number.\n */\n\nconst Navigation = ({ albumNum, handleChange}) => {\n    return (\n        <div className=\"navigation\">\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleChange(albumNum - 1)} disabled={albumNum === 1}>{`<- Prev`}</button>\n            <div>\n            <select onChange={e => handleChange(Number(e.target.value))} value={albumNum}>\n                {\n                Array(100).fill(0).map((_,i) => {\n                    return <option value={i+1} key={i+1}>Album { i+1 }</option>\n                })\n                }\n            </select>\n            </div>\n            <button type=\"button\" class=\"btn btn-primary\" onClick={() => handleChange(albumNum + 1)} disabled={albumNum === 100}>{'Next ->'}</button>\n        </div>\n    )\n}\n\nexport default Navigation\n","import React from \"react\";\n\n/**\n * The Gallery is a simple unordered list that maps\n * each image to it's own list item displaying both\n * image id and image title\n */\n\nconst Gallery = ({ albumList }) => {\n  return (\n    <>\n      <ul>\n        {albumList.map((image) => {\n          return (\n            <li key={image.id}>\n              [{image.id}] {image.title}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Gallery;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Navigation from \"./components/nav/Navigation\";\nimport Gallery from \"./components/album/Gallery\";\nimport \"./App.css\";\n\nfunction App() {\n  const [albums, setAlbums] = useState({number: 1, list: [] })\n  const JSON_PLACEHOLDER_END_POINT = `https://jsonplaceholder.typicode.com/photos?albumId=${albums.number}`\n\n  // state updating function that handles navigation based \n  // triggers, updates album number\n  const handleChange = (newNumber) => {\n    setAlbums({...albums, number: newNumber})\n  }\n  \n  useEffect(() => {\n    // self-invoking async function for fetching and mapping \n    // the albumlist data\n    (async function Fetcher() {\n      const res = await axios.get(JSON_PLACEHOLDER_END_POINT);\n      const mapped = res.data.map(item => {\n        return {id: item.id, title: item.title}\n      })\n      // Set the list to the mapped list of album objects\n      setAlbums({...albums, list: mapped })\n    })()\n    // We want useeffect to have album number as a dependency\n    // in order for it to trigger rerenders whenever the number\n    // changes in state\n  }, [albums.number])\n\n  /**\n   * Renders conditionally based on when the albumList is filled.\n   * Includes two components, Navigation, which controls which album\n   * to visit, and Gallery, which lists all ids and titles of a given\n   * album\n   */\n\n  return (\n    <div className=\"App\">\n      {\n        (albums.list.length > 0) ?\n          (\n            <div>\n              <header>\n                <h1>Album {albums.number}</h1>\n                <Navigation\n                  albumNum={albums.number}\n                  handleChange={handleChange}\n                />\n              </header>\n              <Gallery albumList={albums.list} />\n            </div>\n          ) :\n          (<h1>Loading</h1>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}